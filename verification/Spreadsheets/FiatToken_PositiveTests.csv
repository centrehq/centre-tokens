type,visibility,variable name,Modification Function,Arguments,Result,Code,Test
mapping(address => mapping(address => uint256)),internal,allowed,approve,"_spender = spender, _value = value",allowed[msg.sender][spender] = value,pt020,pt020 should approve a spend and set allowed amount
mapping(address => mapping(address => uint256)),internal,allowed,transferFrom,"_from = from, _to = to, _value = value",allowed[from][spender] -= value,pt007,"pt007 should transferFrom, reducing sender balance by amount and increasing recipient balance by amount"
mapping(address => uint256),internal,balances,burn,_amount = amount,balances[msg.sender] -= amount,pt017,pt017 should burn amount of tokens and reduce balance and total supply by amount
mapping(address => uint256),internal,balances,mint," _to =  to, _amount = amount",balances[to] += amount,pt012,"pt012 should mint the amount, increasing balance of recipient by amount, increasing total supply by amount, and decreasing minterAllowed by amount"
mapping(address => uint256),internal,balances,transfer,"_to = to, _value = value","balances[msg.sender] -= amount, balances[to] += amount",pt008,"pt008 should transfer, reducing sender balance by amount and increasing recipient balance by amount"
mapping(address => uint256),internal,balances,transferFrom,"_from = from, _to = to, _value = value","balances[from] -= amount, balances[to] += amount ",pt007,"pt007 should transferFrom, reducing sender balance by amount and increasing recipient balance by amount"
mapping(address => bool),internal,blacklisted,blacklist,_account = account,blacklisted[account] = true,pt019,pt019 should blacklist and set blacklisted to true
mapping(address => bool),internal,blacklisted,unBlacklist,_account = account,blacklisted[account] = false,pt018,"pt018 should blacklist and set blacklisted to true, then unblacklist and set blacklisted to false"
address,public,blacklister,initialize,_blacklister = blacklister,assign,pt000,pt000 should check that default variable values are correct
address,public,blacklister,updateBlacklister,_newBlacklister = newBlacklister,blacklister = _newBlacklister,pt005,pt005 should updateBlacklister
string,public,currency,initialize,_currency = currency,assign,pt000,pt000 should check that default variable values are correct
uint8,public,decimals,initialize,_decimals = decimals,assign,pt000 ,pt000 should check that default variable values are correct
address,public,masterMinter,initialize,_masterMinter = masterMinter,assign,pt000,pt000 should check that default variable values are correct
address,public,masterMinter,updateMasterMinter,_newMasterMinter,masterMinter = _newMasterMinter ,pt004,pt004 should updateMasterMinter
mapping(address => uint256),internal,minterAllowed,configureMinter,"_minter = minter, _minterAllowedAmount = minterAllowedAmount",minterAllowed[minter] = minterAllowedAmount,pt015,"pt015 should configureMinter, setting the minter to true and mintingAllowance to amount"
mapping(address => uint256),internal,minterAllowed,mint,"_to = to, _amount = amount",minterAllowed[msg.sender] -= amount,pt012,"pt012 should mint the amount, increasing balance of recipient by amount, increasing total supply by amount, and decreasing minterAllowed by amount"
mapping(address => uint256),internal,minterAllowed,removeMinter,_minter = minter,minterAllowed[minter] = 0,pt010,"pt010 should removeMinter, setting the minter to false and minterAllowed to 0"
mapping(address => bool),internal,minters,configureMinter,"_minter = minter, _minterAllowedAmount = minterAllowedAmount",minters[minter] = true,pt015,"pt015 should configureMinter, setting the minter to true and mintingAllowance to amount"
mapping(address => bool),internal,minters,removeMinter,_minter = minter,minters[minter] = false,pt010,"pt010 should removeMinter, setting the minter to false and minterAllowed to 0"
string,public,name,initialize,_name = name,assign,pt000,pt000 should check that default variable values are correct
address,private,owner,transferOwnership ,_newOwner = newOwner,_owner = newOwner,pt009,pt009 should set owner to _newOwner
bool,public,paused = false,pause,NA,paused = true,pt011,pt011 should pause and set paused to true 
bool,public,paused = false,unpause,NA,paused = false,pt006,pt006 should unpause and set paused to false
address,public,pauser,initialize,_pauser = pauser,assign,pt000,pt000 should check that default variable values are correct
address,public,pauser,updatePauser,_newPauser = newPauser,pauser = _newPauser,pt003,pt003 should updatePauser
string,public,symbol,initialize,symbol = _symbol,assign,pt000,pt000 should check that default variable values are correct
uint256,internal,totalSupply_,burn,_amount = amount,totalSupply_ -= _amount,pt017,pt017 should burn amount of tokens and reduce balance and total supply by amount
uint256,internal,totalSupply_,mint," _to =  to, _amount = amount",totalSupply_ += _amount,pt012,"pt012 should mint the amount, increasing balance of recipient by amount, increasing total supply by amount, and decreasing minterAllowed by amount"